basePath: /api
definitions:
  service.LoginReply:
    properties:
      accessToken:
        type: string
    type: object
  service.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  service.OrganizationGetReply:
    properties:
      address:
        type: string
      id:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  service.OrganizationGetRequest:
    properties:
      id:
        type: string
    type: object
  service.OrganizationListRequest:
    properties:
      ids:
        items:
          type: string
        type: array
      keyword:
        type: string
      limit:
        type: integer
      page:
        type: integer
      status:
        type: string
    type: object
  service.ProductCreateReply:
    properties:
      id:
        type: string
    type: object
  service.ProductCreateRequest:
    properties:
      code:
        type: string
      currency:
        type: string
      name:
        type: string
      organization_id:
        type: string
      price:
        type: number
      status:
        type: string
    type: object
  service.ProductGetReply:
    properties:
      code:
        type: string
      currency:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  service.ProductGetRequest:
    properties:
      id:
        type: string
    type: object
  service.ProductListRequest:
    properties:
      ids:
        items:
          type: string
        type: array
      keyword:
        type: string
      limit:
        type: integer
      organization_ids:
        items:
          type: string
        type: array
      page:
        type: integer
      status:
        type: string
    type: object
  service.ProductUpdateReply:
    properties:
      id:
        type: string
    type: object
  service.ProductUpdateRequest:
    properties:
      code:
        type: string
      currency:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      status:
        type: string
    type: object
  service.UserGetReply:
    properties:
      address:
        type: string
      first_name:
        type: string
      id:
        type: string
      is_system:
        type: boolean
      last_name:
        type: string
      login_time:
        type: string
      organization_id:
        type: string
      phone_number:
        type: string
      role:
        type: string
      status:
        type: string
      username:
        type: string
    type: object
  service.UserGetRequest:
    properties:
      id:
        type: string
    type: object
  service.UserListRequest:
    properties:
      ids:
        items:
          type: string
        type: array
      keyword:
        type: string
      limit:
        type: integer
      organization_ids:
        items:
          type: string
        type: array
      page:
        type: integer
      status:
        type: string
      usernames:
        items:
          type: string
        type: array
    type: object
host: selling.management
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API Management
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Selling Management
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: /api/auth/login
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.LoginReply'
      summary: Login
      tags:
      - Auth
  /v1/client/organization/get:
    post:
      consumes:
      - application/json
      description: /api/v1/system/organization/get
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.OrganizationGetRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/service.OrganizationGetReply'
            type: array
      security:
      - ApiKeyAuth: []
      summary: OrganizationGet
      tags:
      - Client
  /v1/client/product/create:
    post:
      consumes:
      - application/json
      description: /api/v1/client/product/create
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.ProductCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/service.ProductCreateReply'
      security:
      - ApiKeyAuth: []
      summary: ProductCreate
      tags:
      - Client
  /v1/client/product/get:
    post:
      consumes:
      - application/json
      description: /api/v1/client/product/get
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.ProductGetRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/service.ProductGetReply'
      security:
      - ApiKeyAuth: []
      summary: ProductGet
      tags:
      - Client
  /v1/client/product/import:
    post:
      consumes:
      - application/json
      description: /api/v1/client/product/get
      produces:
      - application/json
      responses:
        "201":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: ProductImport
      tags:
      - Client
  /v1/client/product/list:
    post:
      consumes:
      - application/json
      description: /api/v1/client/product/list
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.ProductListRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/service.ProductGetReply'
            type: array
      security:
      - ApiKeyAuth: []
      summary: ProductList
      tags:
      - Client
  /v1/client/product/update:
    post:
      consumes:
      - application/json
      description: /api/v1/client/product/update
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.ProductUpdateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/service.ProductUpdateReply'
      security:
      - ApiKeyAuth: []
      summary: ProductUpdate
      tags:
      - Client
  /v1/client/user/get:
    post:
      consumes:
      - application/json
      description: /api/v1/user/get
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.UserGetRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/service.UserGetReply'
      security:
      - ApiKeyAuth: []
      summary: UserGet
      tags:
      - Client
  /v1/client/user/list:
    post:
      consumes:
      - application/json
      description: /api/v1/client/user/get
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.UserListRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/service.UserGetReply'
            type: array
      security:
      - ApiKeyAuth: []
      summary: UserList
      tags:
      - Client
  /v1/system/organization/get:
    post:
      consumes:
      - application/json
      description: /api/v1/system/organization/get
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.OrganizationGetRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/service.OrganizationGetReply'
            type: array
      security:
      - ApiKeyAuth: []
      summary: OrganizationGet
      tags:
      - System
  /v1/system/organization/list:
    post:
      consumes:
      - application/json
      description: /api/v1/system/organization/list
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.OrganizationListRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/service.OrganizationGetReply'
            type: array
      security:
      - ApiKeyAuth: []
      summary: OrganizationList
      tags:
      - System
  /v1/system/product/create:
    post:
      consumes:
      - application/json
      description: /api/v1/product/create
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.ProductCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/service.ProductCreateReply'
      security:
      - ApiKeyAuth: []
      summary: ProductCreate
      tags:
      - System
  /v1/system/product/get:
    post:
      consumes:
      - application/json
      description: /api/v1/product/get
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.ProductGetRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/service.ProductGetReply'
      security:
      - ApiKeyAuth: []
      summary: ProductGet
      tags:
      - System
  /v1/system/product/list:
    post:
      consumes:
      - application/json
      description: /api/v1/product/list
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.ProductListRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/service.ProductGetReply'
            type: array
      security:
      - ApiKeyAuth: []
      summary: ProductList
      tags:
      - System
  /v1/system/product/update:
    post:
      consumes:
      - application/json
      description: /api/v1/product/update
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.ProductUpdateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/service.ProductUpdateReply'
      security:
      - ApiKeyAuth: []
      summary: ProductUpdate
      tags:
      - System
  /v1/system/user/get:
    post:
      consumes:
      - application/json
      description: /api/v1/user/get
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.UserGetRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/service.UserGetReply'
      security:
      - ApiKeyAuth: []
      summary: UserGet
      tags:
      - System
  /v1/system/user/list:
    post:
      consumes:
      - application/json
      description: /api/v1/user/get
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.UserListRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/service.UserGetReply'
            type: array
      security:
      - ApiKeyAuth: []
      summary: UserList
      tags:
      - System
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
